# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type ProfileEntity {
  id: ID!
  fullname: String!
  about: String!
  banner: String
  avatar_url: String
  mobile_number: String
  user: UserEntity!
}

type ConversationEntity {
  id: ID!
  createdAt: Float!
  lastMessageSentAt: DateTime!
  creator: UserEntity!
  recipient: UserEntity!
  lastMessageSent: MessageEntity
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type MessageAttachmentEntity {
  id: Float!
  fullpath: String
  message: MessageEntity
}

type MessageEntity {
  id: ID!
  content: String
  createdAt: Float!
  author: UserEntity
  conversation: ConversationEntity
  attachments: [MessageAttachmentEntity!]
}

type GroupMessageEntity {
  id: ID!
  content: String!
  createdAt: Float!
  author: UserEntity!
  group: GroupEntity!
  attachments: [MessageAttachmentEntity!]!
}

type GroupEntity {
  id: ID!
  title: String
  users: [UserEntity!]!
  creator: UserEntity!
  owner: UserEntity!
  messages: [GroupMessageEntity!]!
  createdAt: Float!
  lastMessageSent: GroupMessageEntity!
  lastMessageSentAt: DateTime!
  avatar: String
}

type UserPresenceEntity {
  id: ID!
  statusMessage: String
  showOffline: Boolean!
  user: UserEntity!
}

type UserEntity {
  id: ID!
  email: String!
  profile: ProfileEntity!
  messages: [MessageEntity!]
  groups: [GroupEntity!]
  presence: UserPresenceEntity
}

type ReturnAuthModel {
  accessToken: String!
}

type Query {
  searchUsers(query: String!): [UserEntity!]!
  getChatById: String!
  getMessagesFromConversation(input: GetMsgsFromConversationInput!): [MessageEntity!]!
  getConversationById(input: GetConversationInput!): ConversationEntity!
  getConversations: [ConversationEntity!]!
}

input GetMsgsFromConversationInput {
  conversationId: Float!
}

input GetConversationInput {
  conversationId: Float!
}

type Mutation {
  register(registerInput: RegisterInput!): ReturnAuthModel!
  login(loginInput: LoginInput!): ReturnAuthModel!
  refresh: ReturnAuthModel!
  logout: Boolean!
  createMessage(input: CreateMessageInput!): MessageEntity!
  deleteMessageFromConversation(input: DeleteMsgFromConversationInput!): Boolean!
  editMessageFromConversation(input: EditMsgFromConversationInput!): MessageEntity!
  createConversation(input: CreateConversationInput!): ConversationEntity!
}

input RegisterInput {
  email: String!
  fullname: String!
  password: String!
}

input LoginInput {
  email: String!
  password: String!
}

input CreateMessageInput {
  content: String
  conversationId: Float!
  attachments: [Upload!]
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

input DeleteMsgFromConversationInput {
  conversationId: Float!
  messageId: Float!
}

input EditMsgFromConversationInput {
  conversationId: Float!
  messageId: Float!
  content: String!
  attachment: Upload
  attachmentId: Float
}

input CreateConversationInput {
  idRecipient: Float!
  message: String!
}

type Subscription {
  createdDeleted: MessageEntity!
  messageDeleted: MessageEntity!
  messageUpdated: MessageEntity!
  conversationCreated: ConversationEntity!
}